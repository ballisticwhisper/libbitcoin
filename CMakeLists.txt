CMAKE_MINIMUM_REQUIRED( VERSION 3.4 )
PROJECT( libbitcoin )

IF(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY )
	SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/lib" )
ENDIF(  )
IF(NOT CMAKE_ARCHIVE_OUTPUT_DIRECTORY )
	SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/lib" )
ENDIF(  )

# set( CMAKE_GENERATOR_TOOLSET "v120" CACHE STRING "Platform toolset" FORCE )

SET( LIBBITCOIN_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}" )
SET( LIBBITCOIN_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src" )
SET( LIBBITCOIN_INC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include" )
SET( BOOST_INC_DIR "${CMAKE_SOURCE_DIR}/dependencies/boost" )
SET( SECP256K1_INC_DIR "${CMAKE_SOURCE_DIR}/dependencies/secp256k1/include" )
# SET( SECP256K1_SRC_DIR "${CMAKE_SOURCE_DIR}/dependencies/secp256k1/src" )
# SET( SECP256K1_CON_DIR "${CMAKE_SOURCE_DIR}/dependencies/secp256k1/contrib" )

INCLUDE_DIRECTORIES( "${SECP256K1_INC_DIR}" )

LIST( APPEND CMAKE_MODULE_PATH "${LIBBITCOIN_ROOT_DIR}/CMake" )

INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}" "${LIBBITCOIN_SRC_DIR}" ${BOOST_INC_DIR} )



FILE( GLOB LIBBITCOIN_INC_ROOT_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/*.hpp" "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/utility/variable_uint_size.hpp" )

FILE( GLOB LIBBITCOIN_BC_INC_ROOT_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/*.hpp" "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/*.h" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin" )

FILE( GLOB CHAIN_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/chain/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/chain" )

FILE( GLOB CONFIG_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/config/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/config" )

FILE( GLOB FORMATS_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/formats/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/formats" )

FILE( GLOB IMPL_FORMATS_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/formats/*.ipp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/formats" )

FILE( GLOB IMPL_SERIAL_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/serialize/*.ipp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/serialize" )

FILE( GLOB IMPL_TRIE_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/trie/*.ipp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/trie" )

FILE( GLOB IMPL_UTIL_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/utility/*.ipp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/impl/utility" )

FILE( GLOB MATH_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/math/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/math" )

FILE( GLOB NETWORK_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/network/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/network" )

FILE( GLOB TRIE_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/trie/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/trie" )

FILE( GLOB UNICODE_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/unicode/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/unicode" )

FILE( GLOB UTIL_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/utility/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/utility" )
LIST( REMOVE_ITEM UTIL_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/utility/variable_uint_size.cpp" )

FILE( GLOB WALLET_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/wallet/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/bitcoin/wallet" )


FILE( GLOB LIBBITCOIN_SRC_ROOT_FILES "${LIBBITCOIN_SRC_DIR}/*.cpp" )

FILE( GLOB CONFIG_SRC_FILES "${LIBBITCOIN_SRC_DIR}/config/*.cpp" )
FILE( GLOB FORMATS_SRC_FILES "${LIBBITCOIN_SRC_DIR}/formats/*.cpp" )
FILE( GLOB MATH_SRC_FILES "${LIBBITCOIN_SRC_DIR}/math/*.cpp" )

FILE( GLOB MATH_EXT_SRC_FILES "${LIBBITCOIN_SRC_DIR}/math/external/*.c" "${LIBBITCOIN_SRC_DIR}/math/external/*.h" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_SRC_DIR}/bitcoin/math/external" )

FILE( GLOB NETWORK_SRC_FILES "${LIBBITCOIN_SRC_DIR}/network/*.cpp" )
FILE( GLOB UNICODE_SRC_FILES "${LIBBITCOIN_SRC_DIR}/unicode/*.cpp" )
FILE( GLOB UTILITY_SRC_FILES "${LIBBITCOIN_SRC_DIR}/utility/*.cpp" )

FILE( GLOB WALLET_SRC_FILES "${LIBBITCOIN_SRC_DIR}/wallet/*.cpp" )

IF( WIN32 )
	ADD_DEFINITIONS( -DBC_STATIC -D_SCL_SECURE_NO_WARNINGS -D_WIN32_WINNT=0x0501 -D_WINSOCK_DEPRECATED_NO_WARNINGS -DWITH_ICU -DWIN32_LEAN_AND_MEAN -DNOMINMAX )
ENDIF(  )

SOURCE_GROUP( include FILES ${LIBBITCOIN_INC_ROOT_FILES} )
SOURCE_GROUP( include\\bitcoin FILES ${LIBBITCOIN_BC_INC_ROOT_FILES} )
SOURCE_GROUP( include\\bitcoin\\chain FILES ${CHAIN_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\config FILES ${CONFIG_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\formats FILES ${FORMATS_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\impl\\formats FILES ${IMPL_FORMATS_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\impl\\serialize FILES ${IMPL_SERIAL_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\impl\\trie FILES ${IMPL_TRIE_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\impl\\utility FILES ${IMPL_UTIL_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\math FILES ${MATH_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\trie FILES ${TRIE_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\network FILES ${NETWORK_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\unicode FILES ${UNICODE_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\utility FILES ${UTIL_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\wallet FILES ${WALLET_INC_FILES} )


SOURCE_GROUP( src FILES ${LIBBITCOIN_SRC_ROOT_FILES} )
SOURCE_GROUP( src\\config FILES ${CONFIG_SRC_FILES} )
SOURCE_GROUP( src\\formats FILES ${FORMATS_SRC_FILES} )
SOURCE_GROUP( src\\math FILES ${MATH_SRC_FILES} )
SOURCE_GROUP( src\\math\\external FILES ${MATH_EXT_SRC_FILES} )
SOURCE_GROUP( src\\network FILES ${NETWORK_SRC_FILES} )
SOURCE_GROUP( src\\unicode FILES ${UNICODE_SRC_FILES} )
SOURCE_GROUP( src\\utility FILES ${UTILITY_SRC_FILES} )
SOURCE_GROUP( src\\wallet FILES ${WALLET_SRC_FILES} )

SET( LIBBITCOIN_SRC_FILES ${LIBBITCOIN_SRC_ROOT_FILES} ${CHAIN_SRC_FILES} ${CONFIG_SRC_FILES} ${EXTERNAL_SRC_FILES} ${FORMATS_SRC_FILES} ${MATH_SRC_FILES} ${MATH_EXT_SRC_FILES} ${MESSAGE_SRC_FILES} ${NETWORK_SRC_FILES} ${UNICODE_SRC_FILES} ${UTILITY_SRC_FILES} ${WALLET_SRC_FILES} ${WALLET_EXT_SRC_FILES} )
SET( LIBBITCOIN_INC_FILES ${LIBBITCOIN_INC_ROOT_FILES} ${CHAIN_INC_FILES} ${CONFIG_INC_FILES} ${FORMATS_INC_FILES} ${IMPL_FORMATS_INC_FILES} ${IMPL_SERIAL_INC_FILES} ${IMPL_TRIE_INC_FILES} ${IMPL_UTIL_INC_FILES} ${MATH_INC_FILES} ${TRIE_INC_FILES} ${NETWORK_INC_FILES} ${UNICODE_INC_FILES} ${UTIL_INC_FILES} ${WALLET_INC_FILES} ${LIBBITCOIN_BC_INC_ROOT_FILES} )
 
ADD_LIBRARY( libbitcoin STATIC ${LIBBITCOIN_SRC_FILES} ${LIBBITCOIN_INC_FILES} )

set_target_properties( libbitcoin PROPERTIES PLATFORM_TOOLSET CTP_Nov2013 )

if ( MSVC )
    set_target_properties( libbitcoin PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../../../libs )
    set_target_properties( libbitcoin PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/../../../libs )
    set_target_properties( libbitcoin PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR}/../../../libs )
endif ( MSVC )


