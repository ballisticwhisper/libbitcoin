CMAKE_MINIMUM_REQUIRED( VERSION 3.4 )
PROJECT( libbitcoin )

IF(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY )
	SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/lib" )
ENDIF(  )
IF(NOT CMAKE_ARCHIVE_OUTPUT_DIRECTORY )
	SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/lib" )
ENDIF(  )

SET( LIBBITCOIN_INC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include" )

SET( LEVELDB_INC_DIR "${CMAKE_SOURCE_DIR}/dependencies/leveldb/include" )
SET( LIBBITCOIN_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src" )
SET( BOOST_INC_DIR "${CMAKE_SOURCE_DIR}/dependencies/boost" )
SET( SECP256K1_INC_DIR "${CMAKE_SOURCE_DIR}/dependencies/secp256k1/include" )

INCLUDE_DIRECTORIES( ${SECP256K1_INC_DIR} ${LEVELDB_INC_DIR} )

LIST( APPEND CMAKE_MODULE_PATH "${LIBBITCOIN_ROOT_DIR}/CMake" )

INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}" "${LIBBITCOIN_SRC_DIR}" ${BOOST_INC_DIR} )



FILE( GLOB LIBBITCOIN_INC_ROOT_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/*.hpp" )

FILE( GLOB LIBBITCOIN_BC_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/blockchain/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/blockchain" )

FILE( GLOB LIBBITCOIN_BCDB_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/blockchain/database/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/blockchain/database" )

FILE( GLOB LIBBITCOIN_IMP_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/impl/*.ipp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/impl" )

FILE( GLOB LIBBITCOIN_IMPSERIAL_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/impl/serialize/*.ipp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/impl/serialize" )

FILE( GLOB LIBBITCOIN_IMPUTIL_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/impl/utility/*.ipp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/impl/utility" )

FILE( GLOB LIBBITCOIN_NET_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/network/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/network" )

FILE( GLOB LIBBITCOIN_UTIL_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/utility/*.hpp" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/utility" )

FILE( GLOB LIBBITCOIN_UTILEXT_INC_FILES "${LIBBITCOIN_INC_DIR}/bitcoin/utility/external/*.h" )
INCLUDE_DIRECTORIES( "${LIBBITCOIN_INC_DIR}/bitcoin/utility/external" )


FILE( GLOB LIBBITCOIN_SRC_ROOT_FILES "${LIBBITCOIN_SRC_DIR}/*.cpp" )
FILE( GLOB LIBBITCOIN_BC_SRC_ROOT_FILES "${LIBBITCOIN_SRC_DIR}/blockchain/*.cpp" )
FILE( GLOB LIBBITCOIN_BCDB_SRC_FILES "${LIBBITCOIN_SRC_DIR}/blockchain/database/*.cpp" "${LIBBITCOIN_SRC_DIR}/blockchain/database/*.c" "${LIBBITCOIN_SRC_DIR}/blockchain/database/*.h" )
FILE( GLOB LIBBITCOIN_BCLEVELDB_SRC_FILES "${LIBBITCOIN_SRC_DIR}/blockchain/leveldb/*.cpp" "${LIBBITCOIN_SRC_DIR}/blockchain/leveldb/*.hpp" )
FILE( GLOB LIBBITCOIN_NET_SRC_FILES "${LIBBITCOIN_SRC_DIR}/network/*.cpp" )
FILE( GLOB LIBBITCOIN_UTIL_SRC_FILES "${LIBBITCOIN_SRC_DIR}/utility/*.cpp" )
FILE( GLOB LIBBITCOIN_UTILEXT_SRC_FILES "${LIBBITCOIN_SRC_DIR}/utility/external/*.c" )

IF( WIN32 )
	ADD_DEFINITIONS( -DBC_STATIC -D_SCL_SECURE_NO_WARNINGS -D_WIN32_WINNT=0x0501 -D_WINSOCK_DEPRECATED_NO_WARNINGS -DWITH_ICU -DWIN32_LEAN_AND_MEAN -DNOMINMAX )
ENDIF(  )

SOURCE_GROUP( include\\bitcoin FILES ${LIBBITCOIN_INC_ROOT_FILES} )
SOURCE_GROUP( include\\bitcoin\\blockchain FILES ${LIBBITCOIN_BC_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\blockchain\\database FILES ${LIBBITCOIN_BCDB_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\impl FILES ${LIBBITCOIN_IMP_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\impl\\serialize FILES ${LIBBITCOIN_IMPSERIAL_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\impl\\utility FILES ${LIBBITCOIN_IMPUTIL_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\network FILES ${LIBBITCOIN_NET_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\utility FILES ${LIBBITCOIN_UTIL_INC_FILES} )
SOURCE_GROUP( include\\bitcoin\\utility\\external FILES ${LIBBITCOIN_UTILEXT_INC_FILES} )

SOURCE_GROUP( src FILES ${LIBBITCOIN_SRC_ROOT_FILES} )
SOURCE_GROUP( src\\blockchain FILES ${LIBBITCOIN_BC_SRC_ROOT_FILES} )
SOURCE_GROUP( src\\blockchain\\database FILES ${LIBBITCOIN_BCDB_SRC_FILES} )
SOURCE_GROUP( src\\blockchain\\leveldb FILES ${LIBBITCOIN_BCLEVELDB_SRC_FILES} )
SOURCE_GROUP( src\\network FILES ${LIBBITCOIN_NET_SRC_FILES} )
SOURCE_GROUP( src\\utility FILES ${LIBBITCOIN_UTIL_SRC_FILES} )
SOURCE_GROUP( src\\utility\\external FILES ${LIBBITCOIN_UTILEXT_SRC_FILES} )

SET( LIBBITCOIN_SRC_FILES ${LIBBITCOIN_SRC_ROOT_FILES} ${LIBBITCOIN_BC_SRC_ROOT_FILES} ${LIBBITCOIN_BCDB_SRC_FILES} ${LIBBITCOIN_BCLEVELDB_SRC_FILES} ${LIBBITCOIN_NET_SRC_FILES} ${LIBBITCOIN_UTIL_SRC_FILES} ${LIBBITCOIN_UTILEXT_SRC_FILES} )

SET( LIBBITCOIN_INC_FILES ${LIBBITCOIN_INC_ROOT_FILES} ${LIBBITCOIN_BC_INC_FILES} ${LIBBITCOIN_BCDB_INC_FILES} ${LIBBITCOIN_IMP_INC_FILES} ${LIBBITCOIN_IMPSERIAL_INC_FILES} ${LIBBITCOIN_IMPUTIL_INC_FILES} ${LIBBITCOIN_NET_INC_FILES} ${LIBBITCOIN_UTIL_INC_FILES} ${LIBBITCOIN_UTILEXT_INC_FILES} )
 
ADD_LIBRARY( libbitcoin STATIC ${LIBBITCOIN_SRC_FILES} ${LIBBITCOIN_INC_FILES} )

set_target_properties( libbitcoin PROPERTIES PLATFORM_TOOLSET CTP_Nov2013 )

if ( MSVC )
    set_target_properties( libbitcoin PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../../../libs )
    set_target_properties( libbitcoin PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/../../../libs )
    set_target_properties( libbitcoin PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR}/../../../libs )
endif ( MSVC )


